{
    "input_model": {
        "type": "PyTorchModel",
        "config": {
            "model_script": "user_script.py",
            "dummy_inputs_func": "dummy_inputs",
            "io_config": "get_io_config",
            "hf_config": {
                "model_name": "microsoft/phi-2",
                "task": "text-generation",
                "from_pretrained_args": {
                    "trust_remote_code": true
                }
            }
        }
    },
    "systems": {
        "local_system": {
            "type": "LocalSystem",
            "config": {
                "accelerators": [
                    {
                        "device": "GPU",
                        "execution_providers": [
                            "DmlExecutionProvider"
                        ]
                    }
                ]
            }
        }
    },
    "evaluators": {
        "common_evaluator": {
            "metrics": [
                {
                    "name": "latency",
                    "type": "latency",
                    "sub_types": [
                        {
                            "name": "avg",
                            "priority": 1
                        }
                    ],
                    "user_config": {
                        "user_script": "user_script.py",
                        "dataloader_func": "create_dataloader",
                        "batch_size": 2,
                        "inference_settings": {
                            "onnx": {
                                "session_options": {
                                    "enable_profiling": false
                                }
                            }
                        }
                    }
                }
            ]
        }
    },
    "passes": {
        "convert": {
            "type": "OnnxConversion",
            "config": {
                "merge_adapter_weights": true,
                "use_dynamo_exporter": false,
                "torch_dtype": "float32",
                "target_opset": 17,
                "save_as_external_data": true,
                "all_tensors_to_one_file": true
            }
        },
        "optimize_dml": {
            "type": "OrtTransformersOptimization",
            "config": {
                "model_type": "gpt2",
                "use_gpu": true,
                "keep_io_types": false,
                "num_heads": 32,
                "num_key_value_heads": 32,
                "hidden_size": 2560,
                "use_gqa": true,
                "opt_level": 0,
                "optimization_options": {
                    "enable_gelu": false,
                    "enable_layer_norm": true,
                    "enable_attention": true,
                    "use_multi_head_attention": true,
                    "enable_skip_layer_norm": false,
                    "enable_embed_layer_norm": false,
                    "enable_bias_skip_layer_norm": false,
                    "enable_bias_gelu": false,
                    "enable_gelu_approximation": false,
                    "enable_qordered_matmul": false,
                    "enable_shape_inference": true,
                    "enable_gemm_fast_gelu": false,
                    "enable_nhwc_conv": false,
                    "enable_group_norm": false,
                    "enable_bias_splitgelu": false,
                    "enable_packed_qkv": true,
                    "enable_packed_kv": true,
                    "enable_bias_add": false,
                    "enable_rotary_embeddings": true
                },
                "save_as_external_data": true,
                "all_tensors_to_one_file": true,
                "float16": true
            }
        },
        "perf_tuning": {
            "type": "OrtPerfTuning",
            "config": {
                "user_script": "user_script.py",
                "dataloader_func": "create_dataloader",
                "batch_size": 2,
                "enable_profiling": false
            }
        }
    },
    "data_configs": {
        "dataset_default_train": {
            "name": "tiny_codes_train",
            "type": "HuggingfaceContainer",
            "user_script": "user_script.py",
            "components": {
                "load_dataset": {
                    "type": "load_tiny_code_dataset"
                }
            },
            "params_config": {
                "data_name": "nampdn-ai/tiny-codes",
                "split": "train",
                "component_kwargs": {
                    "load_dataset": {
                        "language": "Python",
                        "token": true
                    },
                    "pre_process_data": {
                        "corpus_strategy": "join",
                        "text_template": "### Question: {prompt} \n### Answer: {response}",
                        "source_max_len": 1024
                    }
                }
            }
        },
        "wikitext2": {
            "name": "wikitext2",
            "type": "HuggingfaceContainer",
            "params_config": {
                "data_name": "wikitext",
                "subset": "wikitext-2-raw-v1",
                "split": "train",
                "component_kwargs": {
                    "pre_process_data": {
                        "text_cols": [
                            "text"
                        ],
                        "source_max_len": 2048
                    }
                }
            }
        }
    },
    "engine": {
        "evaluate_input_model": false,
        "evaluator": "common_evaluator",
        "host": "local_system",
        "target": "local_system",
        "cache_dir": "cache",
        "output_name": "phi2",
        "output_dir": "phi2",
        "clean_cache": false,
        "log_severity_level": 0,
        "log_to_file": false
    },
    "pass_flows": [
        [
            "convert",
            "optimize_dml",
            "perf_tuning"
        ]
    ]
}